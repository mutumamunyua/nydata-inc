<!-- public/diagrams/legal-rag.svg -->
<svg xmlns="http://www.w3.org/2000/svg" width="1100" height="360" viewBox="0 0 1100 360" preserveAspectRatio="xMidYMid meet">
  <defs>
    <linearGradient id="bg" x1="0" y1="0" x2="1" y2="1">
      <stop offset="0" stop-color="#FDF4FF"/>
      <stop offset="1" stop-color="#FAE8FF"/>
    </linearGradient>

    <filter id="shadow">
      <feDropShadow dx="0" dy="6" stdDeviation="10" flood-color="#0F172A" flood-opacity="0.16"/>
    </filter>

    <!-- compact arrow so it doesn’t collide with cards -->
    <marker id="arrow" viewBox="0 0 10 10" refX="7" refY="5"
            markerWidth="9" markerHeight="9" markerUnits="strokeWidth"
            orient="auto">
      <path d="M0,0 L10,5 L0,10 Z" fill="#B76E79" opacity="0.9"/>
    </marker>

    <style>
      .lbl{ font:600 16px 'EB Garamond', Garamond, serif; fill:#0F172A; }
      .cap{ font: italic 12.5px 'EB Garamond', Garamond, serif; fill:#64748B; }
      .card{ fill:#fff; stroke:#E9D5FF; stroke-width:1.3; rx:12; }
      .conn{ stroke:#B76E79; stroke-width:3.1; stroke-linecap:round; fill:none; }
    </style>
  </defs>

  <rect width="1100" height="360" fill="url(#bg)"/>

  <!-- Row Y positions -->
  <!-- top row y=90, bottom row y=230 -->
  <g filter="url(#shadow)">
    <!-- Top 1: Ingest -->
    <g transform="translate(120,90)">
      <rect class="card" x="-85" y="-31" width="190" height="62"/>
      <text class="lbl" x="10" y="-3" text-anchor="middle">Ingest</text>
      <text class="cap" x="10" y="18" text-anchor="middle">PDF • DOCX • HTML</text>
    </g>

    <!-- Bottom 2: Chunk -->
    <g transform="translate(320,230)">
      <rect class="card" x="-85" y="-31" width="190" height="62"/>
      <text class="lbl" x="10" y="-3" text-anchor="middle">Chunk</text>
      <text class="cap" x="10" y="18" text-anchor="middle">Semantic splits</text>
    </g>

    <!-- Top 3: Embed -->
    <g transform="translate(520,90)">
      <rect class="card" x="-85" y="-31" width="190" height="62"/>
      <text class="lbl" x="10" y="-3" text-anchor="middle">Embed</text>
      <text class="cap" x="10" y="18" text-anchor="middle">Vectors</text>
    </g>

    <!-- Bottom 4: Index -->
    <g transform="translate(720,230)">
      <rect class="card" x="-85" y="-31" width="190" height="62"/>
      <text class="lbl" x="10" y="-3" text-anchor="middle">Index</text>
      <text class="cap" x="10" y="18" text-anchor="middle">Vector DB</text>
    </g>

    <!-- Top 5: Retrieve -->
    <g transform="translate(920,90)">
      <rect class="card" x="-85" y="-31" width="190" height="62"/>
      <text class="lbl" x="10" y="-3" text-anchor="middle">Retrieve</text>
      <text class="cap" x="10" y="18" text-anchor="middle">Relevant precedent</text>
    </g>

    <!-- Bottom 6: Answer -->
    <g transform="translate(980,230)">
      <rect class="card" x="-85" y="-31" width="190" height="62"/>
      <text class="lbl" x="10" y="-3" text-anchor="middle">Answer</text>
      <text class="cap" x="10" y="18" text-anchor="middle">Citations &amp; quotes</text>
    </g>
  </g>

  <!-- Zig-zag connectors -->
  <!-- Ingest(top) -> Chunk(bottom) -->
  <!-- S=(205,95), C1=(245,126) -->
  <!-- New S' = (205 + 0.35*(245-205), 95 + 0.35*(126-95)) = (219,105.85) -->
  <path class="conn" d="M 219,105.85 C 245,126 255,172 270,185" marker-end="url(#arrow)"/>

  <!-- Chunk(bottom) -> Embed(top) -->
  <!-- S=(410,230), C1=(450,204) -->
  <!-- New S' = (410 + 0.35*(450-410), 230 + 0.35*(204-230)) = (424,220.9) -->
  <path class="conn" d="M 424,220.9 C 450,204 460,142 475,125" marker-end="url(#arrow)"/>

  <!-- Embed(top) -> Index(bottom) -->
  <!-- S=(605,100), C1=(645,130) -->
  <!-- New S' = (605 + 0.35*(645-605), 100 + 0.35*(130-100)) = (619,110.5) -->
  <path class="conn" d="M 619,110.5 C 645,130 655,172 670,185" marker-end="url(#arrow)"/>

  <!-- Index(bottom) -> Retrieve(top) -->
  <!-- S=(805,230), C1=(845,204) -->
  <!-- New S' = (805 + 0.35*(845-805), 230 + 0.35*(204-230)) = (819,220.9) -->
  <path class="conn" d="M 819,220.9 C 845,204 855,142 870,125" marker-end="url(#arrow)"/>

  <!-- Retrieve(top) -> Answer(bottom) -->
  <!-- S=(1005,100), C1=(1019,132) -->
  <!-- New S' = (1005 + 0.35*(1019-1005), 100 + 0.35*(132-100)) = (1009.9,111.2) -->
  <path class="conn" d="M 1009.9,111.2 C 1019,132 1027,172 1035,185" marker-end="url(#arrow)"/>

</svg>
